<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="8" passed="6">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/Android_pixel2/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png'> <img src='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/Android_pixel2/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png' height='400' width='400'/> </a>]]>
    </line>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/iOS_iPhone/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png'> <img src='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/iOS_iPhone/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="Sauce Labs App Automation" duration-ms="66052" started-at="2021-03-22T17:22:44 IST" finished-at="2021-03-22T17:23:50 IST">
    <groups>
    </groups>
    <test name="Login-test-Android" duration-ms="39371" started-at="2021-03-22T17:22:44 IST" finished-at="2021-03-22T17:23:23 IST">
      <class name="com.qa.tests.LoginTest">
        <test-method status="PASS" signature="startAppiumServer()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="startAppiumServer" is-config="true" duration-ms="1801" started-at="2021-03-22T17:22:42 IST" finished-at="2021-03-22T17:22:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppiumServer -->
        <test-method status="PASS" signature="desired_capabilities(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="desired_capabilities" is-config="true" duration-ms="10230" started-at="2021-03-22T17:22:44 IST" finished-at="2021-03-22T17:22:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pixel2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[My_emulator]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11000]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- desired_capabilities -->
        <test-method status="PASS" signature="data()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="data" is-config="true" duration-ms="7" started-at="2021-03-22T17:22:54 IST" finished-at="2021-03-22T17:22:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- data -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="startScreenRecording" is-config="true" duration-ms="461" started-at="2021-03-22T17:22:54 IST" finished-at="2021-03-22T17:22:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="initialize_loginpage" is-config="true" duration-ms="150" started-at="2021-03-22T17:22:55 IST" finished-at="2021-03-22T17:22:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.successful_login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="PASS" signature="successful_login()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="successful_login" duration-ms="10267" started-at="2021-03-22T17:22:55 IST" finished-at="2021-03-22T17:23:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successful_login -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="stopScreenRecording" is-config="true" duration-ms="1633" started-at="2021-03-22T17:23:05 IST" finished-at="2021-03-22T17:23:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successful_login status=SUCCESS method=LoginTest.successful_login()[pri:0, instance:com.qa.tests.LoginTest@37858383] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="startScreenRecording" is-config="true" duration-ms="441" started-at="2021-03-22T17:23:07 IST" finished-at="2021-03-22T17:23:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="initialize_loginpage" is-config="true" duration-ms="4" started-at="2021-03-22T17:23:07 IST" finished-at="2021-03-22T17:23:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.unsuccessful_login_wrong_password()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="FAIL" signature="unsuccessful_login_wrong_password()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="unsuccessful_login_wrong_password" duration-ms="3329" started-at="2021-03-22T17:23:07 IST" finished-at="2021-03-22T17:23:11 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.zzz]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.zzz]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.qa.tests.LoginTest.unsuccessful_login_wrong_password(LoginTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/Android_pixel2/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png'> <img src='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/Android_pixel2/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- unsuccessful_login_wrong_password -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="stopScreenRecording" is-config="true" duration-ms="958" started-at="2021-03-22T17:23:12 IST" finished-at="2021-03-22T17:23:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unsuccessful_login_wrong_password status=FAILURE method=LoginTest.unsuccessful_login_wrong_password()[pri:0, instance:com.qa.tests.LoginTest@37858383] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="startScreenRecording" is-config="true" duration-ms="432" started-at="2021-03-22T17:23:13 IST" finished-at="2021-03-22T17:23:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="initialize_loginpage" is-config="true" duration-ms="3" started-at="2021-03-22T17:23:13 IST" finished-at="2021-03-22T17:23:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.unsuccessful_login_wrong_password_username()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="PASS" signature="unsuccessful_login_wrong_password_username()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="unsuccessful_login_wrong_password_username" duration-ms="3715" started-at="2021-03-22T17:23:13 IST" finished-at="2021-03-22T17:23:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsuccessful_login_wrong_password_username -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="stopScreenRecording" is-config="true" duration-ms="748" started-at="2021-03-22T17:23:17 IST" finished-at="2021-03-22T17:23:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unsuccessful_login_wrong_password_username status=SUCCESS method=LoginTest.unsuccessful_login_wrong_password_username()[pri:0, instance:com.qa.tests.LoginTest@37858383] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="startScreenRecording" is-config="true" duration-ms="438" started-at="2021-03-22T17:23:18 IST" finished-at="2021-03-22T17:23:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="initialize_loginpage" is-config="true" duration-ms="2" started-at="2021-03-22T17:23:18 IST" finished-at="2021-03-22T17:23:18 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.unsuccessful_login_wrong_username()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="PASS" signature="unsuccessful_login_wrong_username()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="unsuccessful_login_wrong_username" duration-ms="3705" started-at="2021-03-22T17:23:18 IST" finished-at="2021-03-22T17:23:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsuccessful_login_wrong_username -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="stopScreenRecording" is-config="true" duration-ms="996" started-at="2021-03-22T17:23:22 IST" finished-at="2021-03-22T17:23:23 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unsuccessful_login_wrong_username status=SUCCESS method=LoginTest.unsuccessful_login_wrong_username()[pri:0, instance:com.qa.tests.LoginTest@37858383] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="quit()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="quit" is-config="true" duration-ms="693" started-at="2021-03-22T17:23:23 IST" finished-at="2021-03-22T17:23:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="stopAppiumServer()[pri:0, instance:com.qa.tests.LoginTest@37858383]" name="stopAppiumServer" is-config="true" duration-ms="94" started-at="2021-03-22T17:23:50 IST" finished-at="2021-03-22T17:23:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopAppiumServer -->
      </class> <!-- com.qa.tests.LoginTest -->
    </test> <!-- Login-test-Android -->
    <test name="Login-test-iOS" duration-ms="66052" started-at="2021-03-22T17:22:44 IST" finished-at="2021-03-22T17:23:50 IST">
      <class name="com.qa.tests.LoginTest">
        <test-method status="PASS" signature="desired_capabilities(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="desired_capabilities" is-config="true" duration-ms="10222" started-at="2021-03-22T17:22:44 IST" finished-at="2021-03-22T17:22:54 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8E3D8D15-2520-451B-908B-B0E65FB604BF]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[androidOnly]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[androidOnly]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10001]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[11001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- desired_capabilities -->
        <test-method status="PASS" signature="data()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="data" is-config="true" duration-ms="7" started-at="2021-03-22T17:22:54 IST" finished-at="2021-03-22T17:22:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- data -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="startScreenRecording" is-config="true" duration-ms="1251" started-at="2021-03-22T17:22:54 IST" finished-at="2021-03-22T17:22:56 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="initialize_loginpage" is-config="true" duration-ms="33" started-at="2021-03-22T17:22:56 IST" finished-at="2021-03-22T17:22:56 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.successful_login()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="PASS" signature="successful_login()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="successful_login" duration-ms="19201" started-at="2021-03-22T17:22:56 IST" finished-at="2021-03-22T17:23:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successful_login -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="stopScreenRecording" is-config="true" duration-ms="1632" started-at="2021-03-22T17:23:15 IST" finished-at="2021-03-22T17:23:16 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successful_login status=SUCCESS method=LoginTest.successful_login()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="startScreenRecording" is-config="true" duration-ms="926" started-at="2021-03-22T17:23:16 IST" finished-at="2021-03-22T17:23:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="initialize_loginpage" is-config="true" duration-ms="3" started-at="2021-03-22T17:23:17 IST" finished-at="2021-03-22T17:23:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.unsuccessful_login_wrong_password()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="FAIL" signature="unsuccessful_login_wrong_password()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="unsuccessful_login_wrong_password" duration-ms="9529" started-at="2021-03-22T17:23:17 IST" finished-at="2021-03-22T17:23:27 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.zzz]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.zzz]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at com.qa.tests.LoginTest.unsuccessful_login_wrong_password(LoginTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/iOS_iPhone/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png'> <img src='/Users/vishnu.vardhan/Desktop/Appium-SauceLabs-Automation/Screenshots/iOS_iPhone/2021/03/22 17:22:44/LoginTest/unsuccessful_login_wrong_password.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- unsuccessful_login_wrong_password -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="stopScreenRecording" is-config="true" duration-ms="661" started-at="2021-03-22T17:23:27 IST" finished-at="2021-03-22T17:23:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unsuccessful_login_wrong_password status=FAILURE method=LoginTest.unsuccessful_login_wrong_password()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="startScreenRecording" is-config="true" duration-ms="937" started-at="2021-03-22T17:23:28 IST" finished-at="2021-03-22T17:23:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="initialize_loginpage" is-config="true" duration-ms="1" started-at="2021-03-22T17:23:29 IST" finished-at="2021-03-22T17:23:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.unsuccessful_login_wrong_password_username()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="PASS" signature="unsuccessful_login_wrong_password_username()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="unsuccessful_login_wrong_password_username" duration-ms="8915" started-at="2021-03-22T17:23:29 IST" finished-at="2021-03-22T17:23:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsuccessful_login_wrong_password_username -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="stopScreenRecording" is-config="true" duration-ms="726" started-at="2021-03-22T17:23:38 IST" finished-at="2021-03-22T17:23:38 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unsuccessful_login_wrong_password_username status=SUCCESS method=LoginTest.unsuccessful_login_wrong_password_username()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="startScreenRecording()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="startScreenRecording" is-config="true" duration-ms="942" started-at="2021-03-22T17:23:38 IST" finished-at="2021-03-22T17:23:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startScreenRecording -->
        <test-method status="PASS" signature="initialize_loginpage(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="initialize_loginpage" is-config="true" duration-ms="2" started-at="2021-03-22T17:23:39 IST" finished-at="2021-03-22T17:23:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTest.unsuccessful_login_wrong_username()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize_loginpage -->
        <test-method status="PASS" signature="unsuccessful_login_wrong_username()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="unsuccessful_login_wrong_username" duration-ms="8773" started-at="2021-03-22T17:23:39 IST" finished-at="2021-03-22T17:23:48 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsuccessful_login_wrong_username -->
        <test-method status="PASS" signature="stopScreenRecording(org.testng.ITestResult)[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="stopScreenRecording" is-config="true" duration-ms="868" started-at="2021-03-22T17:23:48 IST" finished-at="2021-03-22T17:23:49 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unsuccessful_login_wrong_username status=SUCCESS method=LoginTest.unsuccessful_login_wrong_username()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopScreenRecording -->
        <test-method status="PASS" signature="quit()[pri:0, instance:com.qa.tests.LoginTest@3cc1435c]" name="quit" is-config="true" duration-ms="1027" started-at="2021-03-22T17:23:49 IST" finished-at="2021-03-22T17:23:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.qa.tests.LoginTest -->
    </test> <!-- Login-test-iOS -->
  </suite> <!-- Sauce Labs App Automation -->
</testng-results>
